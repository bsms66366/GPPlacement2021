{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/bsms6636/Documents/GitHub/ALI/screens/FAQScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport * as WebBrowser from 'expo-web-browser';\nimport { FAQ, Question } from \"../components/Question\";\nvar bullets = ['you could say hello', 'Open an issue', 'making a pull request', 'or give me more ideas to improve this component'];\n\nvar action_example = function action_example() {\n  WebBrowser.openBrowserAsync('https://github.com/Olcina/react-native-faq');\n};\n\nvar goTo = function goTo(link) {\n  WebBrowser.openBrowserAsync(link);\n};\n\nvar questions = [{\n  question: \"How can I help you?\",\n  reply: \"You have several options to choose:\",\n  bullets: bullets,\n  actionText: \"I'm ready to help!\",\n  onClick: action_example\n}, {\n  question: \"Don't you know how to start?\",\n  reply: \"Open a GitHub account and chat whit me\",\n  actionText: \"Sure! Take me there!\",\n  onClick: function onClick() {\n    return goTo('https://github.com/');\n  }\n}];\nimport { Card } from 'react-native-paper';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"You can load a complete F.A.Q.\"), React.createElement(FAQ, {\n        title: \"F.A.Q.\",\n        questions: questions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"Or add your questions one by one\"), React.createElement(Question, {\n        question: \"Is it possible to add just one question?\",\n        reply: \"Of course, here you have an example\",\n        actionText: \"Sure! Take me there!\",\n        onClick: function onClick() {\n          return goTo('https://github.com/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  }\n});","map":{"version":3,"sources":["/Users/bsms6636/Documents/GitHub/ALI/screens/FAQScreen.js"],"names":["React","Constants","WebBrowser","FAQ","Question","bullets","action_example","openBrowserAsync","goTo","link","questions","question","reply","actionText","onClick","Card","App","styles","container","textAlign","Component","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,SAASC,GAAT,EAAcC,QAAd;AAGA,IAAMC,OAAO,GAAG,CACZ,qBADY,EAEZ,eAFY,EAGZ,uBAHY,EAIZ,iDAJY,CAAhB;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBJ,EAAAA,UAAU,CAACK,gBAAX,CACI,4CADJ;AAGH,CAJD;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAU;AACnBP,EAAAA,UAAU,CAACK,gBAAX,CACIE,IADJ;AAGH,CAJD;;AAMA,IAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,QAAQ,EAAE,qBADd;AAEIC,EAAAA,KAAK,EAAE,qCAFX;AAGIP,EAAAA,OAAO,EAAEA,OAHb;AAIIQ,EAAAA,UAAU,EAAE,oBAJhB;AAKIC,EAAAA,OAAO,EAAER;AALb,CADc,EAQd;AACIK,EAAAA,QAAQ,EAAE,8BADd;AAEIC,EAAAA,KAAK,EAAE,wCAFX;AAGIC,EAAAA,UAAU,EAAE,sBAHhB;AAIIC,EAAAA,OAAO,EAAE;AAAA,WAAMN,IAAI,CAAC,qBAAD,CAAV;AAAA;AAJb,CARc,CAAlB;AAiBA,SAASO,IAAT,QAAqB,oBAArB;;IAEqBC,G;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAGI,oBAAC,GAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,SAAS,EAAET,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAES,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAC,0CADb;AAEI,QAAA,KAAK,EAAC,qCAFV;AAGI,QAAA,UAAU,EAAC,sBAHf;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,IAAI,CAAC,qBAAD,CAAV;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,CADJ;AAyBH;;;;EA3B4BR,KAAK,CAACoB,S;;SAAlBJ,G;AA8BrB,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,cAFT;AAGPC,IAAAA,UAAU,EAAExB,SAAS,CAACyB,eAHf;AAIPC,IAAAA,eAAe,EAAE,SAJV;AAKPC,IAAAA,OAAO,EAAE;AALF;AADkB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\n//import { Constants, WebBrowser } from 'expo';\nimport Constants from 'expo-constants';\nimport * as WebBrowser from 'expo-web-browser';\nimport { FAQ, Question } from '../components/Question'\n\n// define some bullets\nconst bullets = [\n    'you could say hello',\n    'Open an issue',\n    'making a pull request',\n    'or give me more ideas to improve this component'\n]\n// define an action\nconst action_example = () => {\n    WebBrowser.openBrowserAsync(\n        'https://github.com/Olcina/react-native-faq'\n    );\n}\n\nconst goTo = (link) => {\n    WebBrowser.openBrowserAsync(\n        link\n    );\n}\n\nconst questions = [\n    {\n        question: \"How can I help you?\",\n        reply: \"You have several options to choose:\",\n        bullets: bullets,\n        actionText: \"I'm ready to help!\",\n        onClick: action_example\n    },\n    {\n        question: \"Don't you know how to start?\",\n        reply: \"Open a GitHub account and chat whit me\",\n        actionText: \"Sure! Take me there!\",\n        onClick: () => goTo('https://github.com/'),\n    }\n]\n\n// or any pure javascript modules available in npm\nimport { Card } from 'react-native-paper';\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <View style={styles.container}>\n\n                <View>\n                    <Text style={{ textAlign: 'center' }}>You can load a complete F.A.Q.</Text>\n\n                    <FAQ\n                        title='F.A.Q.'\n                        questions={questions}\n                    />\n\n                </View>\n\n                <View>\n                    <Text style={{ textAlign: 'center' }}>Or add your questions one by one</Text>\n                    <Question\n                        question=\"Is it possible to add just one question?\"\n                        reply=\"Of course, here you have an example\"\n                        actionText=\"Sure! Take me there!\"\n                        onClick={() => goTo('https://github.com/')}\n                    />\n                </View>\n\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'space-evenly',\n        paddingTop: Constants.statusBarHeight,\n        backgroundColor: '#ecf0f1',\n        padding: 8,\n    }\n});"]},"metadata":{},"sourceType":"module"}